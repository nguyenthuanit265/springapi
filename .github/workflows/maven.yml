# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: springapi cicd flow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn clean install

      #    - name: Update dependency graph
      #      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
      #    - name: Build & push Docker image
      #      uses: mr-smithers-excellent/docker-build-push@v6
      #      with:
      #        image: nguyenthuanit265/springapi-image
      #        tags: latest
      #        registry: docker.io
      #        dockerfile: Dockerfile
      #        username: ${{ secrets.DOCKER_USERNAME }}
      #        password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5.3.0
        with:
          context: .
          push: true
          tags: nguyenthuanit265/springapi-image:latest

      - name: Transfer Docker image to remote server
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Run remove docker container springapi-service
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_SERVER_USERNAME }}@${{ secrets.REMOTE_SERVER_ADDRESS }} << 'ENDSSH'
          docker stop springapi-service
          docker rm -f springapi-service
          docker rmi -f nguyenthuanit265/springapi-image:latest
          ENDSSH

      - name: Run docker container springapi-service
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_SERVER_USERNAME }}@${{ secrets.REMOTE_SERVER_ADDRESS }} << 'ENDSSH'
          docker run --name springapi-service --network springapi-network -p 8082:8082 -e DB_SOURCE="postgresql://${{secrets.POSTGRES_USERNAME_DB}}:${{secrets.POSTGRES_PASSWORD_DB}}@${{secrets.REMOTE_SERVER_ADDRESS}}:5432/postgres_springapi_db?sslmode=disable" -d nguyenthuanit265/springapi-image:latest
          ENDSSH
