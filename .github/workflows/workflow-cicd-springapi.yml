name: springapi cicd flow

on:
  push:
    branches: [ "main" ]

jobs:
  job-springapi-setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
  job-springapi-test:
    runs-on: ubuntu-latest
    steps:
      - name: Test
        run: mvn test
  job-springapi-build:
    runs-on: ubuntu-latest
    steps:
#      - uses: actions/checkout@v4
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#          cache: maven
#      - name: Test
#        run: mvn test

      - name: Build with Maven
        run: mvn clean install

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5.3.0
        with:
          context: .
          push: true
          tags: nguyenthuanit265/springapi-image:latest

      - name: Transfer Docker image to remote server
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Run remove docker container springapi-service
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_SERVER_USERNAME }}@${{ secrets.REMOTE_SERVER_ADDRESS }} << 'ENDSSH'
          docker stop springapi-service
          docker rm -f springapi-service
          docker rmi -f nguyenthuanit265/springapi-image:latest
          ENDSSH

      - name: Run docker container springapi-service
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_SERVER_USERNAME }}@${{ secrets.REMOTE_SERVER_ADDRESS }} << 'ENDSSH'
          docker run --name springapi-service --network springapi-network -p 8082:8082 -e DB_SOURCE="postgresql://${{secrets.POSTGRES_USERNAME_DB}}:${{secrets.POSTGRES_PASSWORD_DB}}@${{secrets.REMOTE_SERVER_ADDRESS}}:5432/postgres_springapi_db?sslmode=disable" -d nguyenthuanit265/springapi-image:latest
          ENDSSH
      - name: Send mail
        if: failure()
        uses: dawidd6/action-send-mail@v3
        with:
            # Required mail server address if not connection_url:
            server_address: smtp.gmail.com
            # Server port, default 25:
            server_port: 465
            # user credentials
            username: ${{ secrets.EMAIL_USERNAME }}
            password: ${{ secrets.EMAIL_PASSWORD }}

            # comma-separated string, send email to
            to: nguyenthuanit265@gmail.com
            # email subject
            subject: ${{ github.job }} job of ${{ github.repository }} has ${{ job.status }}
            # email body as text
            body: ${{ github.job }} job in worflow ${{ github.workflow }} of ${{ github.repository }} has ${{ job.status }}
            # from email name
            from: ${{ github.job }} job of ${{ github.repository }}
            priority: high
            convert_markdown: true
            html_body: |
              ### Job ${{ job.status }}
  
              ${{ github.repository }}: [${{ github.ref }}@${{ github.sha }}](${{ github.server_url }}/${{ github.repository }}/actions)
